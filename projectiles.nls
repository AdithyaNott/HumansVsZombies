; **************
; *** SETUP  ***
; **************

breed [projectiles projectile]
projectiles-own [ is-live hit projectile-type projectile-range projectile-speed projectile-inaccuracy projectiles-remaining traveled nearest-zombie in-line-zombie]

to projectile-init
  set shape "circle"
  set size 1
  set color yellow
  set is-live true
  set hit (false)
  set traveled 0
  rt ((random projectile-inaccuracy) - projectile-inaccuracy / 2) ; Randomly turn +/-(inacccuracy/2)
  set label ""
end

; **************************
; *** ACTION PROCEDURES  ***
; **************************

to projectile-ai
  
  ; Check for zombies immediatly around projectile and stun.
  set nearest-zombie min-one-of zombies with [ (distance myself <= zombie-hit-box-radius) and (is-live) ] [ distance myself ]
  if nearest-zombie != Nobody
  [ stun-zombie (nearest-zombie)
    stop ]
    
  ; Finds closest zombie that is 1) infront of and within hitting distance, and 2) within hitbox distance of the straight line. 
  ; If one exits, stun it. If not, move forward.
  set nearest-zombie min-one-of zombies in-cone projectile-speed 180 with [ (distance-from-line xcor ycor heading <= zombie-hit-box-radius) and (is-live) ] [distance myself]
  if nearest-zombie != Nobody
  [ stun-zombie nearest-zombie
    fd distance nearest-zombie ; Not 100% accurate, but close enough as the implement then dies
    stop ] 
  
  ; If you reach this point, move forward.
  fd projectile-speed
  
  ; Check for zombies immediatly around projectile and stun, again.
  set nearest-zombie min-one-of zombies with [ (distance myself <= zombie-hit-box-radius) and (is-live) ] [ distance myself ]
  if nearest-zombie != Nobody
  [ stun-zombie nearest-zombie
    stop ]
  
  ; Check if the implement should still be live
  check-distance-traveled
  
end

to stun-zombie [target-zombie]
  
  ask target-zombie
  [ set is-live false
    set color (red - 3) ]
  set hit (true)
  set is-live (false)
  set color (yellow - 3)
  
  
end


to check-distance-traveled
  ; increment distance travelede
  set traveled (traveled + projectile-speed / projectile-iter-per-tick)
  ; set dead if did not travel far enough
  if traveled >= projectile-range
  [ set is-live false 
    set color (yellow - 3)]
end

; **************************
; *** UTILITY PROCEDURES ***
; **************************

; None